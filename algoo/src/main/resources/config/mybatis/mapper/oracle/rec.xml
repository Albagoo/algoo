<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mybatis.mapper.oracle.rec">
	<sql id="searchWhere">
		 <where> 
			<if test="searchKeyword!=null and searchKeyword!=''">
				${searchCondition}
				like '%' || #{searchKeyword} || '%'
			</if>

			<if test="area1!=null and area1!=''">
			   <if test="searchKeyword!=null and searchKeyword!=''">
				OR	
				</if>
				ADDRESS
				like '%' || #{area1} || '%'
			</if>

			<if test="area2!=null and area2!=''">
				OR ADDRESS
				like '%' || #{area2} || '%'
			</if>

			<if test="area3!=null and area3!=''">
			   OR	ADDRESS
				like '%' || #{area3} || '%'
			</if>

			<if test="area4!=null and area4!=''">
				OR	ADDRESS
				like '%' || #{area4} || '%'
			</if>

			<if test="area5!=null and area5!=''">
            OR	ADDRESS
				like '%' || #{area5} || '%'
			</if>

			<if test="job1!=null and job1!=''">
			   
            AND JOB_NAME2
				like '%' || #{job1} || '%'
			</if>

			<if test="job2!=null and job2!=''">
				OR	JOB_NAME2
				like '%' || #{job2} || '%'
			</if>

			<if test="job3!=null and job3!=''">
				OR	JOB_NAME2
				like '%' || #{job3} || '%'
			</if>

			<if test="job4!=null and job4!=''">
			   OR	JOB_NAME2
				like '%' || #{job4} || '%'
			</if>

			<if test="job5!=null and job5!=''">
            OR	JOB_NAME2
				like '%' || #{job5} || '%'
			</if>
			
			<if test="workTerm != null and workTerm!=''">
				AND work_term IN
				<foreach collection="workTerm" item="workTerm" index="index"
					open="(" close=")" separator=",">
					#{workTerm}
				</foreach>
			</if>

			<if test="recruitType != null and recruitType!=''">
				AND recruit_Type IN
				<foreach collection="recruitType" item="recruitType" index="index"
					open="(" close=")" separator=",">
					#{recruitType}
				</foreach>
			</if>
			
			<if test="welfare != null and welfare !='' and welfare !=' '">
				AND welfare IN
				<foreach collection="welfare" item="welfare" index="index"
					open="(" close=")" separator=",">
					#{welfare}
				</foreach>
			</if>
         
			<if test="preference != null and preference!=''">
				AND preference IN
				<foreach collection="preference" item="preference" index="index"
					open="(" close=")" separator=",">
					#{preference}
				</foreach>
			</if>

		 </where> 
	</sql>

	<select id="selectRecByCode" parameterType="String" resultType="RecVO">
		select * from RECRUITMENT
		where REC_CODE=#{recCode}
	</select>



	<select id="selectTotalCount" parameterType="RecSeachVO"
		resultType="int">
		select count(*) from RECRUITMENT
		<include refid="searchWhere"></include>
	</select>

	<select id="selectCompanyByCode" parameterType="String"
		resultType="CompanyVO">
		select * from company
		where comp_code=#{compCode}
	</select>

	<select id="selectServiceByCode" parameterType="String"
		resultType="ServiceVO">
		select service_code,grade,deadline,
		trunc(deadline-sysdate)as days from service
		where service_code=#{serviceCode}
	</select>

	<update id="updateReadCount" parameterType="int">
		update RECRUITMENT
		set readcount=readcount+1
		where rec_code=#{recCode}
	</update>

	<insert id="insertRecSevice" parameterType="map">
		insert into service
		(SERVICE_CODE,grade,days,deadline)
		values
		( SERVICE_SEQ.nextval,
		#{grade}, #{days}, sysdate+1 )
	</insert>

	<insert id="insertRec" parameterType="RecVO">
		<selectKey keyProperty="serviceCode" resultType="int" order="BEFORE">
			select last_number-1 from user_sequences where
			sequence_name='SERVICE_SEQ'

		</selectKey>

		insert into RECRUITMENT
		(rec_code,comp_Name,title,job_Name,job_Name2,
		zipcode,address,address_Detail,sub_Region,
		sub_Num,sub_Name,sub_Info,work_Term,work_Days,
		work_Time,work_Time2,work_Time3,work_Time4,pay_type,pay,
		recruit_Type,welfare,gender,age,educate_Lv,
		career,preference,recruit_Member,recruit_Person,recruit_Method,
		documents,detail_Recruit,comp_Code,service_Code,RECRUIT_DEADLINE
		)
		values(RECRUITMENT_seq.nextval, #{compName},#{title},#{jobName},#{jobName2},
		#{zipcode},#{address},#{addressDetail},#{subRegion},
		#{subNum},#{subName},#{subInfo},#{workTerm},#{workDays},
		#{workTime},#{workTime2},#{workTime3},#{workTime4},#{payType},#{pay},
		#{recruitType},#{welfare},#{gender},#{age},#{educateLv},
		#{career},#{preference},#{recruitMember},#{recruitPerson},#{recruitMethod},
		#{documents},#{detailRecruit},#{compCode},#{serviceCode},#{recruitDeadline}
		)
	</insert>

	<select id="selectJobName" resultType="hashmap">
		select job_name from jobs
		group by job_name
	</select>

	<select id="selectAllRec" resultType="RecVO" parameterType="RecSeachVO">

		select *
		from
		(
		select rownum as RNUM, A.*
		from
		(
		select rec_code,comp_Name,title,job_Name,job_Name2,
		zipcode,address,address_Detail,sub_Region,
		sub_Num,sub_Name,sub_Info,work_Term,work_Days,
		work_Time,work_Time2,work_Time3,work_Time4,pay_type,pay,
		recruit_Type,welfare,gender,age,educate_Lv,
		career,preference,recruit_Member,recruit_Person,recruit_Method,
		documents,detail_Recruit,comp_Code,service_Code,RECRUIT_DEADLINE,
      regdate from
		RECRUITMENT
		<include refid="searchWhere"></include>
		order by rec_code desc ) A
		) 
      <![CDATA[
       where  RNUM> #{firstRecordIndex} 
         and RNUM<= #{firstRecordIndex}
         + #{recordCountPerPage}  
       ]]>
	</select>

	<select id="selectJobName2" parameterType="String" resultType="hashmap">
		select job_name2 from jobs
		where job_name=${jobName}
	</select>
</mapper>